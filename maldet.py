import os
import time
import argparse

parser = argparse.ArgumentParser(description='Simple Malware detection using heuristic algorithm for finding potential malware files.')
parser.add_argument('-w','--wordlist', required=True, help='wordlist file containing malicious file extensions')
parser.add_argument('-d','--directory', required=True, help='a directory to scan')
parser.add_argument('-o', '--output', required=True, help='output file to save the results')
args = parser.parse_args()

# ~# please find exact potential malicious file extensions as wordlist before using the tools

with open(args.wordlist, 'r') as f:
    malicious_extensions = [line.strip().lower() for line in f]

def scan_directory(dir):
    potential_malware_count = 0
    start_time = time.time()
    
    results = []

    for root, dirs, files in os.walk(dir):
        for file in files:
            file_path = os.path.join(root, file)
            extension = os.path.splitext(file_path)[1].lower()
            if extension in malicious_extensions:
                print(f"Potential malware detected: {file_path}")
                results.append(f"Potential malware detected: {file_path}")
                potential_malware_count += 1

    end_time = time.time()
    total_time = end_time - start_time

    print(f"\nTotal files scanned: {sum(len(files) for _, _, files in os.walk(dir))}")
    print(f"Potential malware files detected: {potential_malware_count}")
    print(f"Total time taken: {total_time:.2f} seconds")
    
    with open(args.output, 'w') as f:
        f.write('\n'.join(results))

    print(f"Results saved to {args.output}")

scan_directory(args.directory)
